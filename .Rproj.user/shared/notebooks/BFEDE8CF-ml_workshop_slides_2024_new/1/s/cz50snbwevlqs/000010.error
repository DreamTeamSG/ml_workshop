{"frames":[{"func":"resample(task_ah, learner = rf, resampling = rsmp(\"cv\", folds = 10), \n    store_models = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"future_map(n, workhorse, iteration = seq_len(n), learner = grid$learner, \n    mode = grid$mode, MoreArgs = list(task = task, resampling = resampling, \n        store_models = store_models, lgr_index = lgr::logger_index(), \n        pb = pb, unmarshal = unmarshal, callbacks = callbacks))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"future.apply::future_mapply(FUN, ..., MoreArgs = MoreArgs, SIMPLIFY = FALSE, \n    USE.NAMES = FALSE, future.globals = FALSE, future.packages = mlr_reflections$loaded_packages, \n    future.seed = TRUE, future.scheduling = scheduling, future.chunk.size = chunk_size, \n    future.stdout = stdout)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"future_xapply(FUN = FUN, nX = nX, chunk_args = dots, MoreArgs = MoreArgs, \n    get_chunk = function(X, chunk) lapply(X, FUN = `chunkWith[[`, \n        chunk), expr = expr, envir = envir, future.envir = future.envir, \n    future.globals = future.globals, future.packages = future.packages,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    for (ii in seq_along(chunks)) {\n        chunk <- chunks[[ii]]\n        if (debug)  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), \n    names[nh], parentenv, handlers[[nh]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"value[[3L]](cond)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"onError(e, futures = fs, debug = debug)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(ex)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: The following packages could not be loaded: ranger\n"}