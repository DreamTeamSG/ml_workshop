"0","library(ggplot2)"
"0","library(gridExtra)"
"0",""
"0","# population model"
"0","f <- function(x)10*sin(0.8*x)+x"
"0",""
"0","sim <- function(n, f, xmin = -5, xmax = 5, sigma = 5){"
"0","  x = runif(n, xmin, xmax)"
"0","  y = f(x) + rnorm(n, sd = sigma)"
"0","  data.frame(x, y)"
"0","}"
"0",""
"0","bias_plot <- function(data, y_mean, y_10, y_90){"
"0","  ggplot(data = data, aes(x = x, y = y, colour = sample)) +"
"0","    geom_point(size = 0.8) + "
"0","    geom_vline(xintercept = 2.5, linetype = ""dashed"", "
"0","      linewidth = 0.6, col = ""darkgrey"") + #black line for x = 2.5"
"0","    geom_line(stat=""smooth"", method = ""lm"", size = 0.8, alpha = 0.3) + "
"0","    stat_function(fun = f, color = ""black"", size = 0.6) + "
"0","    geom_point(aes(x = 2.5, y = y_10), col = ""black"", shape = 95, size = 6) +"
"0","    geom_point(aes(x = 2.5, y = y_90), col = ""black"", shape = 95, size = 6) + "
"0","    geom_point(aes(x = 2.5, y = y_mean), col = ""black"", shape = 4, size = 3) +"
"0","    xlim(-5, 5) + ylim(-33, 32) + theme_bw() +"
"0","    theme(legend.position=""none"")"
"0","}"
"0",""
"0","var_plot <- function(data, y_mean, y_10, y_90){"
"0","  ggplot(data = data, aes(x = x, y = y, group = sample, colour = sample)) +"
"0","    geom_point(size = 0.7) + "
"0","    geom_vline(xintercept = 2.5, linetype = ""dashed"", "
"0","      linewidth = 0.6, col = ""darkgrey"") +  #black line for x = 2.5"
"0","    geom_line(stat = ""smooth"", method = ""lm"", formula = y ~ poly(x, d, raw = TRUE), size = 0.8, alpha = 0.3) + "
"0","    stat_function(fun = f, color = ""black"", size = 0.4) + "
"0","    geom_point(aes(x = 2.5, y = y_10), col = ""black"", shape = 95, size = 6) +"
"0","    geom_point(aes(x = 2.5, y = y_90), col = ""black"", shape = 95, size = 6) +"
"0","    geom_point(aes(x = 2.5, y = y_mean), col = ""black"", shape = 4, size = 3) +"
"0","    xlim(-5, 5) + ylim(-33, 32) + theme_bw() +"
"0","    theme(legend.position=""none"") "
"0","}"
"0",""
"0",""
"0","## Example 1"
"0","# simulate data"
"0","n <- 12 # number of points per sample"
"0","m <- 60 # number of samples"
"0","d <- 7 # degree of polynomial"
"0",""
"0","set.seed(5)"
"0","dat <- Reduce(f = rbind, x = lapply(1:m, FUN = function(x){sim(n, f)}))"
"0","dat$sample <- factor(rep(1:m, each = n))"
"0",""
"0","## get predictions for x = 2.5 for better visualization "
"0","df_results_bias_1 <- data.frame(sample = unique(dat$sample), y_hat = NA)"
"0",""
"0","for(i in unique(dat$sample)){"
"0","  fit_bias1 = lm(y~x, dat[dat$sample == i, ])"
"0","  df_results_bias_1$y_hat[df_results_bias_1$sample == i] = predict.lm(fit_bias1, data.frame(x = 2.5)) "
"0","}"
"0",""
"0","perc_b1 <- quantile(df_results_bias_1$y_hat, c(0.10, 0.90))"
"0",""
"0","bias_1 <- bias_plot(dat, y_mean = mean(df_results_bias_1$y_hat), y_10 = perc_b1[1], y_90 = perc_b1[2]) + "
"0","  ggtitle(label = ""Inflexible Model"", subtitle = ""A1"") + "
"0","  theme(plot.title = element_text(size = 15, hjust = 0.5),  plot.subtitle = element_text(size = 15)) +"
"0","  annotate(""label"", x = 0, y = -32, size = 3, label = ""Bias: High | Variance: Low"") "
"0","  "
"0","  "
"0","## get predictions for x = 2.5 for better visualization "
"0","df_results_var1 <- data.frame(sample = unique(dat$sample), y_hat = NA)"
"0","  "
"0","for(i in unique(dat$sample)){"
"0","  fit_var1 = lm(y ~ poly(x, d, raw = TRUE), dat[dat$sample == i, ])"
"0","  df_results_var1$y_hat[df_results_var1$sample == i] = predict.lm(fit_var1, data.frame(x = 2.5)) "
"0","} "
"0","  "
"0","perc_v1 <- quantile(df_results_var1$y_hat, c(0.10, 0.90))"
"0",""
"0","var_1 <- var_plot(dat, y_mean = mean(df_results_var1$y_hat), y_10 = perc_v1[1], y_90 = perc_v1[2]) + "
"0","  ggtitle(label = ""Flexible Model"", subtitle = ""B1"") + "
"0","  theme(plot.title = element_text(size = 15, hjust = 0.5), plot.subtitle = element_text(size = 15)) +"
"0","  annotate(""label"", x = 0, y = -32, size = 3, label = ""Bias: Low | Variance: High"")"
"0",""
"0",""
"0",""
"0","## Example 2"
"0","# simulate data"
"0","n <- 50 # number of points per sample"
"0","m <- 60 # number of samples"
"0","d <- 7 # degree of polynomial"
"0",""
"0","set.seed(5)"
"0","dat <- Reduce(f = rbind, x = lapply(1:m, FUN = function(x){sim(n, f)}))"
"0","dat$sample <- factor(rep(1:m, each = n))"
"0",""
"0","## get predictions for x = 2.5 for better visualization "
"0","df_results_bias_2 <- data.frame(sample = unique(dat$sample), y_hat = NA)"
"0",""
"0","for(i in unique(dat$sample)){"
"0","  fit_bias2 <- lm(y~x, dat[dat$sample == i, ])"
"0","  df_results_bias_2$y_hat[df_results_bias_2$sample == i] <- predict.lm(fit_bias2, data.frame(x = 2.5)) "
"0","} "
"0",""
"0","perc_b2 <- quantile(df_results_bias_2$y_hat, c(0.10, 0.90))"
"0",""
"0","bias_2 <- bias_plot(dat, y_mean = mean(df_results_bias_2$y_hat), y_10 = perc_b2[1], y_90 = perc_b2[2]) + "
"0","  ggtitle(label = ""Inflexible Model"", subtitle = ""A2"") + "
"0","  theme(plot.title = element_text(size = 15, hjust = 0.5),  plot.subtitle = element_text(size = 15)) +"
"0","  annotate(""label"", x = 0, y = -32, size = 3, label = ""Bias: High | Variance: Low"") "
"0",""
"0",""
"0",""
"0","## get predictions for x = 2.5 for better visualization "
"0","df_results_var2 <- data.frame(sample = unique(dat$sample), y_hat = NA)"
"0",""
"0","for(i in unique(dat$sample)){"
"0","  fit_var2 <- lm(y ~ poly(x, d, raw = TRUE), dat[dat$sample == i, ])"
"0","  df_results_var2$y_hat[df_results_var1$sample == i] <- predict.lm(fit_var2, data.frame(x = 2.5)) "
"0","} "
"0",""
"0","perc_v2 <- quantile(df_results_var2$y_hat, c(0.10, 0.90))"
"0",""
"0","var_2 <- var_plot(dat, y_mean = mean(df_results_var2$y_hat), y_10 = perc_v2[1], y_90 = perc_v2[2]) + "
"0","  ggtitle(label = ""Flexible Model"", subtitle = ""B2"") + "
"0","  theme(plot.title = element_text(size = 15, hjust = 0.5), plot.subtitle = element_text(size = 15)) +"
"0","  annotate(""label"", x = 0, y = -32, size = 3, label = ""Bias: Low | Variance: Low"")"
"0",""
